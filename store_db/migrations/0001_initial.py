# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-09 17:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
        ('category_tree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn_10', models.CharField(max_length=10, unique=True)),
                ('isbn_13', models.CharField(max_length=13, unique=True)),
                ('language', models.CharField(choices=[('eng', 'English'), ('fre', 'French')], default='eng', max_length=3)),
                ('authors', models.ManyToManyField(to='store_db.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('added_or_updated_datetime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('status', models.CharField(choices=[('PEN', 'Pending'), ('ACC', 'Accepted'), ('DEC', 'Declined')], default='PEN', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=4, max_digits=19)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('total_available_stock', models.PositiveIntegerField()),
                ('total_sold', models.PositiveIntegerField(default=0)),
                ('available_countries', models.CharField(choices=[('Domestic', 'Domestic'), ('Worldwide', 'Worldwide')], default='Worldwide', max_length=12)),
                ('domestic_shipping_company', models.CharField(blank=True, max_length=100, null=True)),
                ('domestic_shipping_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('free_domestic_shipping', models.BooleanField()),
                ('international_shipping_company', models.CharField(blank=True, max_length=100, null=True)),
                ('international_shipping_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('free_international_shipping', models.BooleanField()),
                ('local_pick_up_accepted', models.BooleanField()),
                ('dispatch_max_time', models.PositiveIntegerField()),
                ('return_accepted', models.BooleanField()),
                ('listing_end_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('condition', models.CharField(choices=[('n', 'New'), ('u', 'Used')], default='n', max_length=1)),
                ('visibility', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=2000)),
                ('shipping_product_dimension_height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_product_dimension_width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_product_dimension_length', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_product_dimension_units', models.CharField(choices=[('IN', 'Inches'), ('FT', 'Feet'), ('MM', 'Millimeters'), ('CM', 'Centimeters')], default='IN', max_length=2)),
                ('shipping_product_weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_product_weight_units', models.CharField(choices=[('OZ', 'Ounces'), ('LB', 'Pounds'), ('MG', 'Milligrams'), ('G', 'Grams'), ('KG', 'Kilograms')], default='OZ', max_length=2)),
                ('posting_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('category', models.ManyToManyField(related_name='main_sub_cat_item', to='category_tree.Category')),
            ],
        ),
        migrations.CreateModel(
            name='ItemFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('description', models.CharField(max_length=500)),
                ('visibility', models.BooleanField(default=False)),
                ('posting_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_in_feedback', to='store_db.Item')),
                ('user_reviewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_item_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=250)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('photo_or_video', models.CharField(choices=[('P', 'Photo'), ('V', 'Video')], default='P', max_length=1)),
                ('added_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_media', to='store_db.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('item_returned', models.NullBooleanField()),
                ('completed', models.BooleanField(default=False)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_order', to='store_db.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SellerFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_description', models.CharField(max_length=1000)),
                ('review_points', models.PositiveSmallIntegerField()),
                ('posting_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_by', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_inventory', to='store_db.Item'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='item_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_location_address', to='accounts.Address'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_inventory', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dispute',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_no_disputes', to='store_db.Order'),
        ),
        migrations.AddField(
            model_name='cart',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_in_cart', to='store_db.Item'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookstore',
            name='item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='book_store_item', to='store_db.Item'),
        ),
        migrations.AddField(
            model_name='bookstore',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_db.Publisher'),
        ),
    ]
